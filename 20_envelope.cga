/**
 * 20_envelope.cga
 * Builds envelopes (streetwall/podium + tower) from limits & simple bulk rules
 */

version "2023.1"
import "00_config.cga"
import "10_parcel_attribs.cga"

// Public interfaces (called by land-use rules)
Envelope_Residential(maxH) -->
    setupFootprint(MAX_SITE_COVERAGE_RES)
    PodiumTower(maxH, FLOOR_HEIGHT_RES)

Envelope_Commercial(maxH) -->
    setupFootprint(MAX_SITE_COVERAGE_COM)
    PodiumTower(maxH, FLOOR_HEIGHT_COM)

Envelope_MixedUse(maxH) -->
    setupFootprint(MAX_SITE_COVERAGE_MIX)
    PodiumTower(maxH, FLOOR_HEIGHT_MIX)

// --- Helpers ---
@Hidden
setupFootprint(maxCoverage) -->
    // Limit buildable area by site coverage, keeping a perimeter edge for setback if needed
    comp(f){ inside : Inset | border : EdgeBelt }
    Inset -->
        offset(-sqrt(1 - maxCoverage) * 5, inside)  // heuristic inset; tune if needed
        NIL
    EdgeBelt -->
        // Use entire footprint (City contexts often permit high coverage)
        // Keep as single shape for podium massing
        set(material.opacity, 0)
        NIL

// Podium + Tower logic with simple streetwall controls
@Hidden
PodiumTower(maxH, floorH) -->
    // Streetwall: clamp between min/max, but not higher than maxH
    streetwallH = clamp(STREETWALL_MIN, STREETWALL_MAX, maxH)
    podiumH = min(streetwallH, PODIUM_MAX_LEVELS * floorH)
    split(y, { podium : podiumH : Podium | tower : (maxH - podiumH) : Tower(podiumH, floorH) })

Podium -->
    color("#d0d0d0")
    extrude(world.y)    // already split; this fills the podium volume
    // Facade placeholder
    comp(f){ side : Facade | top : RoofPlate }
    Facade --> color("#b8b8b8")
    RoofPlate --> color("#aaaaaa")

@Hidden
Tower(podiumH, floorH) -->
    setback(PODIUM_SETBACK)
    color("#e0e0e0")
    extrude(world.y)
    comp(f){ side : TowerFacade | top : RoofPlate }
    TowerFacade -->
        // Optionally articulate by floors
        split(y, unit(floorH)){ ~1 : Floor | ~1 : Floor | ~1 : Floor | remainder : Floor }
    Floor --> color("#cfcfcf")
    RoofPlate --> color("#bbbbbb")

@Hidden
clamp(minV, maxV, val) =
    max(minV, min(maxV, val))
